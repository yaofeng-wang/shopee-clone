name: CI/CD

on:
  push:
    branches: [ production ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configuring AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: shopee-clone
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Copy files into EC2 instance

        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_PEM }}
          port: ${{ secrets.AWS_PORT}}
          source: "."
          target: "."
          
      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: shopee-clone
          IMAGE_TAG: latest
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_PEM }}
          port: ${{ secrets.AWS_PORT }}
          script: |
            aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 285785138545.dkr.ecr.ap-southeast-1.amazonaws.com
            docker pull 285785138545.dkr.ecr.ap-southeast-1.amazonaws.com/shopee-clone:latest
            docker-compose -f docker-compose.prod.yml up -d

